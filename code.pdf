%!PS-Adobe-3.0
%%Title: Covariance.m, DistanceMaha.m, InitMain.m, InterestRegion.m, TestProche.m, barycentre.m, binarisationMain.m, mainScript.m, motif2frame.m, moyenne.m
%%For: maxime da silva
%%Creator: a2ps version 4.14
%%CreationDate: Sun Dec 11 13:21:05 2016
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 12
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ matCov ] = ) p
(Covariance) L
(\(moy,reg \)) p n
(%Donne la covariance d'une matrice de valeur) c n
(%   Detailed explanation goes here) N
(%Affectation de la matrice de covariance) N
(matCov=zeros\(3:3\);) p n
(%Pour chaque couleur) c n
(for) K
( c=1:3) p n
(    ) S
(for) K
( c2=1:3) p
(%On regarde les 3 couleurs) c n
(        test=mean\(reg\(:,:,c\)\);) p n
(        matCov\(c,c2\)=mean\(mean\(\(reg\(:,:,c\)-moy\(c\)\).*\(reg\(:,:,c2\)-moy\(c2\)\)\)\)) N
(        moy\(c\)) N
(    ) S
(end) K n
(end) N
() p n
(end) K n
() p n
(Covariance.m) (Page 1/1) (d\303\251c 09, 16 17:58) title
border
grestore
(Printed by maxime da silva) rhead
(Covariance.m) (1/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [DistMaha] = ) p
(DistanceMaha) L
(\( img,moy,matCov \)) p n
(%Fonction Distance de mahalanobis qui per permet avec d'avoir la distance) c n
(%de mahanobis en tout point d'une image avec une moyenne et une covariance) N
(%   Detailed explanation goes here) N
() p n
(invCov=inv\(matCov\);) S
(%On prend l'inverse) c n
(imgR=double\(img\(:,:,1\)\);) p
(%On affecte les 3 composantes) c n
(imgV=double\(img\(:,:,2\)\);) p n
(imgB=double\(img\(:,:,3\)\);) N
() N
(%creation de la matrice des xi- moyenne , avec tous les pixels d'un coup) c n
(lineR=reshape\(imgR,1,numel\(imgR\)\);) p n
(lineV=reshape\(imgV,1,numel\(imgV\)\);) N
(lineB=reshape\(imgB,1,numel\(imgB\)\);) N
(lineR=lineR-moy\(1\);) N
(lineV=lineV-moy\(2\);) N
(lineB=lineB-moy\(3\);) N
(Vectmaha=[lineR;lineV;lineB];) N
() N
() N
(W= invCov * Vectmaha;) N
(DistMaha= Vectmaha .* W;) N
() N
(DistMaha = sum\(DistMaha,1\);) N
() N
(%On recr\351e l'image avec les distances) c n
(DistMaha= reshape\( DistMaha, [size\(img,1\),size\(img,2\)]\);) p n
(end) K n
() p n
(DistanceMaha.m) (Page 1/1) (d\303\251c 11, 16 12:56) title
border
grestore
(Printed by maxime da silva) rhead
(DistanceMaha.m) (2/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ moy,cov ] = ) p
(InitMain) L
(\( image \)) p n
(%R\351cup\351ration du mod\350le de picot pour la main ) c n
(interest=image\(123:147,283:290,:\);) p
(%r\351cup\351ration de la zone d'int\351r\352t de la main) c n
(moy=moyenne\(interest\);) p n
(cov=Covariance\(moy,interest\);) N
(end) K n
() p n
(InitMain.m) (Page 1/1) (d\303\251c 11, 16 12:58) title
border
grestore
(Printed by maxime da silva) rhead
(InitMain.m) (3/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ region ] = ) p
(InterestRegion) L
(\( image \)) p n
(%R\351cup\351ration de la zone d'int\351r\352t de l'image) c n
(%   Detailed explanation goes here) N
(region=image\(143:153,185:194,1:3\);) p n
() N
(end) K n
() p n
(InterestRegion.m) (Page 1/1) (d\303\251c 11, 16 12:59) title
border
grestore
(Printed by maxime da silva) rhead
(InterestRegion.m) (4/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ordonneActuel ] = ) p
(TestProche) L
(\(old, actual \)) p n
(%ordonnancement des barycentres) c n
(%   Detailed explanation goes here) N
() p n
(ordonneActuel=zeros\(2,4\);) S
(%Cr\351ation de la nouvelle matrice) c n
(for) K
( i=1:4) p
(%pour chaque barycentres de l'image pr\351c\351dente) c n
(    minimum=realmax;) p
(%On affecte le plus grand des r\351els ) c n
(    ) p
(for) K
( j=1:4) p
(%POur chaque point de la nouvelle matrice) c n
(    distance=\(actual\(1,j\)-old\(1,i\)\)^2+\(actual\(2,j\)-old\(2,i\)\)^2;) p n
(    ) S
(%On fait la distance euclidienne entre les deux points) c n
(        ) p
(if) K
(\(distance<minimum\)) p
(%Si le point est plus proche ) c n
(            minimum=distance;) p
(%on affecte le nouveau minimum) c n
(            ordonneActuel\(:,i\)=actual\(:,j\);) p
(%Et on affecte la matrice ordonn\351e) c n
(        ) p
(end) K n
(    ) p
(end) K n
() p n
(end) K n
(end) N
() p n
(TestProche.m) (Page 1/1) (d\303\251c 11, 16 13:08) title
border
grestore
(Printed by maxime da silva) rhead
(TestProche.m) (5/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ matBary ] = ) p
(barycentre) L
(\( img \)) p n
(%r\351cup\350re une image et retourne la position des barycentres) c n
(%   Detailed explanation goes here) N
(    ) p
(%Labellisation et affectation de la nouvelle matrice) c n
(    img=bwlabel\(img\);) p n
(    matBary=zeros\(2,4\);) N
(    ) S
(%Pour les 4 points, affectation des barycentres) c n
(   ) p
(for) K
( i=1:4) p n
(    [y, x] = find\(img == i\);) N
(    matBary\(1,i\) = mean\(double\(x\)\);) N
(    matBary\(2,i\) = mean\(double\(y\)\);) N
(   ) S
(end) K n
(end) N
() p n
(barycentre.m) (Page 1/1) (d\303\251c 09, 16 17:56) title
border
grestore
(Printed by maxime da silva) rhead
(barycentre.m) (6/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ binary ] = ) p
(binarisationMain) L
(\( image,moy,cov \)) p n
(%Binarse la main) c n
(%   Detailed explanation goes here) N
(%D\351finition du seuil et distance de maha avec celui ci ) N
(seuil=200;) p n
(distancemaha=DistanceMaha\(image,moy,cov\);) N
(binary=seuillage\(distancemaha,seuil\);) N
() N
(end) K n
() p n
(binarisationMain.m) (Page 1/1) (d\303\251c 09, 16 17:57) title
border
grestore
(Printed by maxime da silva) rhead
(binarisationMain.m) (7/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(%Chargement des vid\351os) c n
(obj=VideoReader\(') p
(video.avi) str
('\);) p n
(myVideo=VideoReader\(') S
(InsideIn.avi) str
('\);) p n
(myImg=read\(myVideo,1\);) N
(result=read\(obj,1\);) N
() N
(%Mod\350le de picot) c n
(interest=InterestRegion\(result\);) p n
(moy=moyenne\(interest\);) N
(cov=Covariance\(moy,interest\);) N
() N
(%Initialisation du videoWriter) c n
(videoFinale=VideoWriter\(') p
(output.avi) str
('\);) p n
(open\(videoFinale\);) N
() N
(%Mod\350le de picot pour la main) c n
(main=read\(obj,50\);) p n
([moyMain,CovMain]=InitMain\(main\);) N
() N
(%Premi\350re image) c n
(distancemaha=DistanceMaha\(result,moy,cov\);) p n
(seuil=500;) N
(binary=seuillage\(distancemaha,seuil\);) N
(binary=postTraitement\(binary\);) N
(MatBary=barycentre\(binary\);) N
(image\(binary\);) N
(colormap\(gray\);) N
() N
(%Ordonnancement des points bleu) c n
(MatBary=MatBary\(:,[1 2 4 3]\);) p n
() N
() N
(%R\351cup\351ration de la matrice binaire de la main) c n
( MainBinaire=binarisationMain\(result,moyMain,CovMain\);) p n
( ) N
( ) S
(%cr\351ation de l'image et insertion dan la vid\351o) c n
( newFrame=motif2frame\(myImg,result,MatBary\(1,:\),MatBary\(2,:\),1/1.20,MainBinaire\)) p n
(;) N
( writeVideo\(videoFinale,newFrame\);) N
( ) N
( ) S
(%Affectation de la matrice pour le testProche) c n
(  old=MatBary;) p n
(  j=0) N
(  ) S
(%Pour chaque image) c n
( ) p
(for) K
( i=2:obj.NumberOfFrames) p n
(     ) S
(%D\351callage temporel) c n
(    ) p
(if) K
(\(i<20\)) p n
(        myImg=read\(myVideo,1\);) N
(    ) S
(else) K n
(        myImg=read\(myVideo,i-19\);) p n
(    ) S
(end) K n
(    ) p
(%R\351cup\351ration de l'image i et distance maha pour la main et les points) c n
(    ) p
(%bleus) c n
(    result=read\(obj,i\);) p n
(    distancemaha=DistanceMaha\(result,moy,cov\);) N
(    binary=seuillage\(distancemaha,seuil\);) N
(    j=j+1) N
(    binary=postTraitement\(binary\);) N
(    MainBinaire=binarisationMain\(result,moyMain,CovMain\);) N
(    ) S
(%Barycentres) c n
(    MatBary=barycentre\(binary\);) p n
(    ) S
(%Ordonnancement) c n
(mainScript.m) (Page 1/2) (d\303\251c 09, 16 18:44) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    BarycentresActuels=TestProche\(old,MatBary\);) p n
(    ) N
(    ) S
(%Affectation de la nouvelle et \351criture) c n
(    newFrame=motif2frame\(myImg,result,BarycentresActuels\(1,:\),BarycentresActuels) p n
(\(2,:\),1/1.20,MainBinaire\);) N
(    writeVideo\(videoFinale,newFrame\);) N
(    ) S
(%Affectation des barycentres actuels) c n
(    old=BarycentresActuels;) p n
( ) S
(end) K n
() p n
(%Fermeture du stream) c n
(close\(videoFinale\);) p n
(mainScript.m) (Page 2/2) (d\303\251c 09, 16 18:44) title
border
grestore
(Printed by maxime da silva) rhead
(mainScript.m) (8/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( frame=) p
(motif2frame) L
(\(motif,frame,x,y,scale,mask\)) p n
(% motif : image 'source' \(couleur index\351e ou vraie couleur\)) c n
(% frame : image 'destination' \(vraie couleur\)) N
(% x,y   : coordonn\351es des 4 sommets de la 'source' dans la 'destination', vecteu) N
(rs lignes) N
(% scale : param\350tre d'\351chelle \(exemple : 1\)  ) N
(% mask  : masque 'destination' des pixels \340 ne pas modifier, \(exemple : matrice ) N
(de 0\)  ) N
() p n
([hIn,wIn,dIn]=size\(motif\);) N
(xIn=[1 wIn wIn 1];) N
(yIn=[1 1 hIn hIn];) N
(xIn=wIn/2+scale*\(xIn-wIn/2\);) N
(yIn=hIn/2+scale*\(yIn-hIn/2\);) N
(tForm=cp2tform\([xIn' yIn'],[x' y'],') S
(projective) str
('\);) p n
(motif=double\(motif\);) N
(for) K
( p=1:3) p n
(    ) S
(if) K
( dIn == 1) p n
(        [motifTransform,xData,yData]=imtransform\(motif\(:,:\),tForm,') S
(Fill) str
(',-1\);) p n
(    ) S
(else) K n
(        [motifTransform,xData,yData]=imtransform\(motif\(:,:,p\),tForm,') p
(Fill) str
(',-1\);) p n
(    ) S
(end) K n
(    [hOut,wOut]=size\(motifTransform\);) p n
(    xOut=fix\(xData\(1\)\);) N
(    yOut=fix\(yData\(1\)\);) N
(    dxOut=xOut:xOut+wOut-1;) N
(    dyOut=yOut:yOut+hOut-1;) N
(    pos=find\(mask\(dyOut,dxOut\)==1\);) N
(    ) S
(if) K
( \(length\(pos\)\)) p n
(        motifTransform\(pos\)=-1;) N
(    ) S
(end) K n
(    pos=find\(motifTransform~=-1\);) p n
(    frameCut=frame\(dyOut,dxOut,p\);) N
(    ) S
(if) K
( \(length\(pos\)\)) p n
(        frameCut\(pos\)=uint8\(motifTransform\(pos\)\);) N
(    ) S
(end) K n
(    frame\(dyOut,dxOut,p\)=frameCut;    ) p n
(end) K n
(end) S
(motif2frame.m) (Page 1/1) (nov 22, 16 8:38) title
border
grestore
(Printed by maxime da silva) rhead
(motif2frame.m) (9/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ moy] = ) p
(moyenne) L
(\( reg \)) p n
(%Calcul) c n
(moy=zeros\(3,1\);) p
(%Cr\351ation de la matrice) c n
() p n
(        ) S
(for) K
( c=1:3) p n
(            moy\(c\)=mean\(mean\(reg\(:,:,c\)\)\);) S
(%Calcul de la moyenne ) c n
(            ) p
(%pour chaque couleur de la zone d'int\351r\352t) c n
(        ) p
(end) K n
(end) N
() p n
(moyenne.m) (Page 1/1) (d\303\251c 11, 16 13:03) title
border
grestore
(Printed by maxime da silva) rhead
(moyenne.m) (10/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ Im ] = ) p
(postTraitement) L
(\( binary \)) p n
(%Postraitement, qui fait une dilatation et une \351rosion sur une image) c n
(%donn\351e.) N
(%   Detailed explanation goes here) N
(se=strel\(') p
(disk) str
(',5\);) p
(%S\351lection de la forme ) c n
(Im= imerode\(binary, se\);) p
(%Erosion ) c n
(Im=imdilate\(Im,se\);) p
(%Dilatation) c n
(Im=Im.*255;) p n
(end) K n
() p n
(postTraitement.m) (Page 1/1) (d\303\251c 11, 16 12:54) title
border
grestore
(Printed by maxime da silva) rhead
(postTraitement.m) (11/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ imBinaire ] = ) p
(seuillage) L
(\( distMaha,seuil \)) p n
(%R\351cup\351ration de l'image bianire avec le sueuillage) c n
(%   Detailed explanation goes here) N
() p n
(imBinaire=distMaha;) S
(%R\351cup\351ration de la matrice de distance) c n
(for) K
( i=1:size\(distMaha,1\)) p
(%Pour chaque ligne) c n
(    ) p
(for) K
( j=1:size\(distMaha,2\)) p
(%Et chaque colonnes) c n
(        ) p
(if) K
( distMaha\(i,j\)<seuil) p
(%Si la distance est plus petite que le seuil) c n
(            imBinaire\(i,j\)=1;) p
(%Alors l'image bianire=1) c n
(        ) p
(else) K
( imBinaire\(i,j\)) p
(%Sinon =0) c n
(        ) p
(end) K n
(    ) p
(end) K n
(end) N
(end) N
() p n
() N
(seuillage.m) (Page 1/1) (d\303\251c 11, 16 13:05) title
border
grestore
(Printed by maxime da silva) rhead
(seuillage.m) (12/12) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
