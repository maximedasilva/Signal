%!PS-Adobe-3.0
%%Title: 2, code.ps, Covariance.m, DistanceMaha.m, InitMain.m, InterestRegion.m, TestProche.m, barycentre.m, binarisationMain.m, mainScript.m
%%For: maxime da silva
%%Creator: a2ps version 4.14
%%CreationDate: Sun Dec 11 13:16:29 2016
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 22
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(%!PS-Adobe-3.0) C n
(%%Title: Covariance.m, DistanceMaha.m, InitMain.m, InterestRegion.m, TestProche.) N
(m, barycentre.m, binarisationMain.m, mainScript.m, motif2frame.m, moyenne.m) N
(%%For: maxime da silva) N
(%%Creator: a2ps version 4.14) N
(%%CreationDate: Sun Dec 11 13:14:06 2016) N
(%%BoundingBox: 24 24 571 818) N
(%%DocumentData: Clean7Bit) N
(%%Orientation: Landscape) N
(%%Pages: 12) N
(%%PageOrder: Ascend) N
(%%DocumentMedia: A4 595 842 0 \(\) \(\)) N
(%%DocumentNeededResources: font Courier) N
(%%+ font Courier-Bold) N
(%%+ font Courier-BoldOblique) N
(%%+ font Courier-Oblique) N
(%%+ font Helvetica) N
(%%+ font Helvetica-Bold) N
(%%+ font Symbol) N
(%%+ font Times-Bold) N
(%%+ font Times-Roman) N
(%%DocumentProcessColors: Black ) N
(%%DocumentSuppliedResources: procset a2ps-a2ps-hdr) N
(%%+ procset a2ps-black+white-Prolog) N
(%%+ encoding ISO-8859-1Encoding) N
(%%EndComments) N
(/a2psdict 200 ) p
(dict) K
( ) p
(def) K n
(a2psdict ) p
(begin) K n
(%%BeginProlog) C n
(%%Copyright: \(c\) 1988, 89, 90, 91, 92, 93 Miguel Santana) N
(%%Copyright: \(c\) 1995, 96, 97, 98 Akim Demaille, Miguel Santana) N
(% Check PostScript language level.) c n
(/languagelevel ) p
(where) K
( {) p n
(  ) S
(pop) K
( /gs_languagelevel languagelevel ) p
(def) K n
(} {) p n
(  /gs_languagelevel 1 ) S
(def) K n
(} ) p
(ifelse) K n
() p n
(% EPSF import as in the Red Book) c n
(/BeginInclude) L
( {) p n
(  /b4_Inc_state ) S
(save) K
( ) p
(def) K
(    ) p 32 T () S 40 T () S
(% Save state for cleanup) c n
(  /dict_count countdictstack ) p
(def) K
() p 40 T () S
(% Count objects on dict stack) c n
(  /op_count count 1 ) p
(sub) K
( ) p
(def) K
() p 32 T () S 40 T () S
(% Count objects on operand stack ) c n
(  userdict ) p
(begin) K n
(    0 ) p
(setgray) K
( 0 setlinecap) p n
(    1 ) S
(setlinewidth) K
( 0 setlinejoin) p n
(    10 setmiterlimit [ ] 0 setdash ) S
(newpath) K n
(    gs_languagelevel 1 ne {) p n
(      ) S
(false) k
( setstrokeadjust ) p
(false) k
( setoverprint ) p n
(    } ) S
(if) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(/EndInclude) L
( {) p n
(  count op_count ) S
(sub) K
( { pos } repeat) p 40 T () S
(% Clean up stacks) c n
(  countdictstack dict_count ) p
(sub) K
( { ) p
(end) K
( } repeat) p n
(  b4_Inc_state ) S
(restore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(/BeginEPSF) L
( {) p n
(  BeginInclude) N
(  /) S
(showpage) K
( { } ) p
(def) K n
(} ) p
(bind) K
( ) p
(def) K n
(code.ps) (Page 1/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(/EndEPSF) L
( {) p n
(  EndInclude) N
(} ) S
(bind) K
( ) p
(def) K n
() p n
(% Page prefeed) c n
(/page_prefeed) L
( {         ) p
(% bool -> -) c n
(  statusdict /prefeed ) p
(known) K
( {) p n
(    statusdict ) S
(exch) K
( /prefeed ) p
(exch) K
( ) p
(put) K n
(  } {) p n
(    ) S
(pop) K n
(  } ) p
(ifelse) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(/deffont) L
( {) p n
(  ) S
(findfont) K
( ) p
(exch) K
( ) p
(scalefont) K
( ) p
(def) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(/reencode_font) L
( {) p n
(  ) S
(findfont) K
( reencode 2 ) p
(copy) K
( ) p
(definefont) K
( ) p
(pop) K
( ) p
(def) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function c-show \(str => -\)) c n
(% centers text only according to x axis.) N
(/c-show) L
( { ) p n
(  ) S
(dup) K
( ) p
(stringwidth) K
( ) p
(pop) K n
(  2 ) p
(div) K
( ) p
(neg) K
( 0 ) p
(rmoveto) K n
(  ) p
(show) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function l-show \(str => -\)) c n
(% prints texts so that it ends at currentpoint) N
(/l-show) L
( {) p n
(  ) S
(dup) K
( ) p
(stringwidth) K
( ) p
(pop) K
( ) p
(neg) K
( ) p n
(  0 ) N
(  ) S
(rmoveto) K
( ) p
(show) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% center-fit show \(str w => -\)) c n
(% show centered, and scale currentfont so that the width is less than w) N
(/cfshow) L
( {) p n
(  ) S
(exch) K
( ) p
(dup) K
( ) p
(stringwidth) K
( ) p
(pop) K n
(  ) p
(% If the title is too big, try to make it smaller) c n
(  3 2 ) p
(roll) K
( 2 ) p
(copy) K n
(  ) p
(gt) K n
(  { ) p
(% if, i.e. too big) c n
(    ) p
(exch) K
( ) p
(div) K n
(    ) p
(currentfont) K
( ) p
(exch) K
( ) p
(scalefont) K
( ) p
(setfont) K n
(  } { ) p
(% ifelse) c n
(    ) p
(pop) K
( ) p
(pop) K
( ) p n
(  }) N
(  ) S
(ifelse) K n
(  c-show) p 16 T () S 24 T () S 32 T () S
(% center title) c n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Return the y size of the current font) c n
(% - => fontsize) N
(/currentfontsize) L
( {) p n
(  ) S
(currentfont) K
( /FontMatrix ) p
(get) K
( 3 ) p
(get) K
( 1000 ) p
(mul) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% reencode the font) c n
(code.ps) (Page 2/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (1/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(% <encoding-vector> <fontdict> -> <newfontdict>) c n
(/reencode) L
( { ) p
(%def) c n
(  ) p
(dup) K
( ) p
(length) K
( 5 ) p
(add) K
( ) p
(dict) K
( ) p
(begin) K n
(    { ) p
(%forall) c n
(      ) p
(% <vector> <key> <val>) c n
(      1 ) p
(index) K
( /FID ne ) p n
(      { ) S
(def) K
( }{ ) p
(pop) K
( ) p
(pop) K
( } ) p
(ifelse) K n
(    } ) p
(forall) K n
(    /Encoding ) p
(exch) K
( ) p
(def) K
( ) p
(% -) c n
() p n
(    ) S
(% Use the font's bounding box to determine the ascent, descent,) c n
(    ) p
(% and overall height; don't forget that these values have to be) c n
(    ) p
(% transformed using the font's matrix.) c n
(    ) p
(% We use `load' because sometimes BBox is executable, sometimes not.) c n
(    ) p
(% Since we need 4 numbers an not an array avoid BBox from being executed) c n
(    /FontBBox load aload ) p
(pop) K n
(    FontMatrix transform /Ascent ) p
(exch) K
( ) p
(def) K
( ) p
(pop) K n
(    FontMatrix transform /Descent ) p
(exch) K
( ) p
(def) K
( ) p
(pop) K n
(    /FontHeight Ascent Descent ) p
(sub) K
( ) p
(def) K n
() p n
(    ) S
(% Get the underline position and thickness if they're defined.) c n
(    ) p
(% Use 1 if they are not defined.) c n
(    ) p
(currentdict) K
( /FontInfo 2 ) p
(copy) K
( ) p
(known) K n
(    { ) p
(get) K n
(      /UnderlinePosition 2 ) p
(copy) K
( ) p
(% <FontInfo> /UP <FontInfo> /UP) c n
(      2 ) p
(copy) K
( ) p
(known) K n
(      { ) p
(get) K
( }{ ) p
(pop) K
( ) p
(pop) K
( 1 } ) p
(ifelse) K n
(      0 ) p
(exch) K
( FontMatrix transform ) p
(exch) K
( ) p
(pop) K n
(      ) p
(def) K
( ) p
(% <FontInfo>) c n
() p n
(      /UnderlineThickness 2 ) S
(copy) K
( ) p
(% <FontInfo> /UT <FontInfo> /UT) c n
(      2 ) p
(copy) K
( ) p
(known) K n
(      { ) p
(get) K
( }{ ) p
(pop) K
( ) p
(pop) K
( 1 } ) p
(ifelse) K n
(      0 ) p
(exch) K
( FontMatrix transform ) p
(exch) K
( ) p
(pop) K n
(      ) p
(def) K
( ) p
(% <FontInfo>) c n
(      ) p
(pop) K
( ) p
(% -) c n
(    }{ ) p
(pop) K
( ) p
(pop) K n
(    } ) p
(ifelse) K n
() p n
(    ) S
(currentdict) K n
(  ) p
(end) K
( ) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(% Function print line number \(<string> # -\)) c n
(/# {) p n
(  ) S
(gsave) K n
(    sx cw ) p
(mul) K
( ) p
(neg) K
( 2 ) p
(div) K
( 0 ) p
(rmoveto) K n
(    f# ) p
(setfont) K n
(    c-show) p n
(  ) S
(grestore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% -------- Some routines to enlight plain b/w printings ---------) c n
() p n
(% Underline) c n
(% width --) N
(/dounderline) L
( {) p n
(  currentpoint) N
(  ) S
(gsave) K n
(    ) p
(moveto) K n
(    0 ) p
(currentfont) K
( /Descent ) p
(get) K
( currentfontsize ) p
(mul) K
( ) p
(rmoveto) K n
(    0 ) p
(rlineto) K n
(code.ps) (Page 3/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(stroke) K n
(  ) p
(grestore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Underline a string) c n
(% string --) N
(/dounderlinestring) L
( {) p n
(  ) S
(stringwidth) K
( ) p
(pop) K n
(  dounderline) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/UL) L
( {) p n
(  /ul ) S
(exch) K
( store) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(% Draw a box of WIDTH wrt current font) c n
(% width --) N
(/dobox) L
( {) p n
(  currentpoint) N
(  ) S
(gsave) K n
(    ) p
(newpath) K n
(    ) p
(moveto) K n
(    0 ) p
(currentfont) K
( /Descent ) p
(get) K
( currentfontsize ) p
(mul) K
( ) p
(rmoveto) K n
(    ) p
(dup) K
( 0 ) p
(rlineto) K n
(    0 ) p
(currentfont) K
( /FontHeight ) p
(get) K
( currentfontsize ) p
(mul) K
( ) p
(rlineto) K n
(    ) p
(neg) K
( 0 ) p
(rlineto) K n
(    ) p
(closepath) K n
(    ) p
(stroke) K n
(  ) p
(grestore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(/BX) L
( {) p n
(  /bx ) S
(exch) K
( store) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(% Box a string) c n
(% string --) N
(/doboxstring) L
( {) p n
(  ) S
(stringwidth) K
( ) p
(pop) K n
(  dobox) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(%) c n
(% ------------- Color routines ---------------) N
(%) N
(/FG /setrgbcolor load ) p
(def) K n
() p n
(% Draw the background) c n
(% width --) N
(/dobackground) L
( {) p n
(  currentpoint) N
(  ) S
(gsave) K n
(    ) p
(newpath) K n
(    ) p
(moveto) K n
(    0 ) p
(currentfont) K
( /Descent ) p
(get) K
( currentfontsize ) p
(mul) K
( ) p
(rmoveto) K n
(    ) p
(dup) K
( 0 ) p
(rlineto) K n
(    0 ) p
(currentfont) K
( /FontHeight ) p
(get) K
( currentfontsize ) p
(mul) K
( ) p
(rlineto) K n
(    ) p
(neg) K
( 0 ) p
(rlineto) K n
(    ) p
(closepath) K n
(    bgcolor aload ) p
(pop) K
( setrgbcolor) p n
(    ) S
(fill) K n
(  ) p
(grestore) K n
(code.ps) (Page 4/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (2/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Draw bg for a string) c n
(% string --) N
(/dobackgroundstring) L
( {) p n
(  ) S
(stringwidth) K
( ) p
(pop) K n
(  dobackground) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
() N
(/BG) L
( {) p n
(  ) S
(dup) K
( /bg ) p
(exch) K
( store) p n
(  { mark 4 1 ) S
(roll) K
( ] /bgcolor ) p
(exch) K
( store } ) p
(if) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
() N
(/Show) L
( {) p n
(  bg { ) S
(dup) K
( dobackgroundstring } ) p
(if) K n
(  ul { ) p
(dup) K
( dounderlinestring } ) p
(if) K n
(  bx { ) p
(dup) K
( doboxstring } ) p
(if) K n
(  ) p
(show) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function T\(ab\), jumps to the n-th tabulation in the current line) c n
(/T) L
( {) p n
(  cw ) S
(mul) K
( x0 ) p
(add) K n
(  bg { ) p
(dup) K
( currentpoint ) p
(pop) K
( ) p
(sub) K
( dobackground } ) p
(if) K n
(  ul { ) p
(dup) K
( currentpoint ) p
(pop) K
( ) p
(sub) K
( dounderline } ) p
(if) K n
(  bx { ) p
(dup) K
( currentpoint ) p
(pop) K
( ) p
(sub) K
( dobox } ) p
(if) K n
(  y0 ) p
(moveto) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function n: move to the next line) c n
(/n) L
( {) p n
(  /y0 y0 bfs ) S
(sub) K
( store) p n
(  x0 y0 ) S
(moveto) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function N: show and move to the next line) c n
(/N) L
( {) p n
(  Show) N
(  /y0 y0 bfs ) S
(sub) K
( store) p n
(  x0 y0 ) S
(moveto) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(/S) L
( {) p n
(  Show) N
(} ) S
(bind) K
( ) p
(def) K n
() p n
(%%BeginResource: procset a2ps-a2ps-hdr 2.0 2) C n
(%%Copyright: \(c\) 1988, 89, 90, 91, 92, 93 Miguel Santana) N
(%%Copyright: \(c\) 1995, 96, 97, 98 Akim Demaille, Miguel Santana) N
(% Function title: prints page header.) c n
(% <ct> <rt> <lt> are passed as argument) N
(/title) L
( { ) p n
(  ) S
(% 1. Draw the background) c n
(  x v ) p
(get) K
( y v ) p
(get) K
( ) p
(moveto) K n
(  ) p
(gsave) K n
(    0 th 2 ) p
(div) K
( ) p
(neg) K
( ) p
(rmoveto) K
( ) p n
(    th ) S
(setlinewidth) K n
(    0.95 ) p
(setgray) K n
(    pw 0 ) p
(rlineto) K
( ) p
(stroke) K n
(code.ps) (Page 5/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(grestore) K n
(  ) p
(% 2. Border it) c n
(  ) p
(gsave) K n
(    0.7 ) p
(setlinewidth) K n
(    pw 0 ) p
(rlineto) K n
(    0 th ) p
(neg) K
( ) p
(rlineto) K n
(    pw ) p
(neg) K
( 0 ) p
(rlineto) K n
(    ) p
(closepath) K
( ) p
(stroke) K n
(  ) p
(grestore) K n
(  ) p
(% stk: ct rt lt) c n
(  x v ) p
(get) K
( y v ) p
(get) K
( th ) p
(sub) K
( 1 ) p
(add) K
( ) p
(moveto) K n
(%%IncludeResource: font Helvetica) C n
(  fHelvetica fnfs 0.8 ) p
(mul) K
( ) p
(scalefont) K
( ) p
(setfont) K n
(  ) p
(% 3. The left title) c n
(  ) p
(gsave) K n
(    ) p
(dup) K
( ) p
(stringwidth) K
( ) p
(pop) K
( fnfs 0.8 ) p
(mul) K
( ) p
(add) K
( ) p
(exch) K
( ) p
(% leave space took on stack) c n
(    fnfs 0.8 ) p
(mul) K
( hm ) p
(rmoveto) K n
(    ) p
(show) K
() p 16 T () S 24 T () S 32 T () S
(% left title) c n
(  ) p
(grestore) K n
(  ) p
(exch) K n
(  ) p
(% stk: ct ltw rt) c n
(  ) p
(% 4. the right title) c n
(  ) p
(gsave) K n
(    ) p
(dup) K
( ) p
(stringwidth) K
( ) p
(pop) K
( fnfs 0.8 ) p
(mul) K
( ) p
(add) K
( ) p
(exch) K
( ) p
(% leave space took on stack) c n
(    ) p
(dup) K n
(    pw ) p
(exch) K
( ) p
(stringwidth) K
( ) p
(pop) K
( fnfs 0.8 ) p
(mul) K
( ) p
(add) K
( ) p
(sub) K n
(    hm) p n
(    ) S
(rmoveto) K n
(    ) p
(show) K
() p 16 T () S 24 T () S 32 T () S
(% right title) c n
(  ) p
(grestore) K n
(  ) p
(% stk: ct ltw rtw) c n
(  ) p
(% 5. the center title) c n
(  ) p
(gsave) K n
(    pw 3 1 ) p
(roll) K n
(    ) p
(% stk: ct pw ltw rtw) c n
(    3 ) p
(copy) K
( ) p n
(    ) S
(% Move to the center of the left room) c n
(    ) p
(sub) K
( ) p
(add) K
( 2 ) p
(div) K
( hm ) p
(rmoveto) K n
(    ) p
(% What is the available space in here?) c n
(    ) p
(add) K
( ) p
(sub) K
( fnfs 0.8 ) p
(mul) K
( ) p
(sub) K
( fnfs 0.8 ) p
(mul) K
( ) p
(sub) K n
(    ) p
(% stk: ct space_left) c n
(%%IncludeResource: font Helvetica-Bold) C n
(  fHelvetica-Bold fnfs ) p
(scalefont) K
( ) p
(setfont) K n
(    cfshow) p n
(  ) S
(grestore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function border: prints virtual page border) c n
(/border) L
( { ) p
(%def) c n
(  ) p
(gsave) K
() p 8 T () S 16 T () S 24 T () S 32 T () S
(% print four sides) c n
(    0 ) p
(setgray) K n
(    x v ) p
(get) K
( y v ) p
(get) K
( ) p
(moveto) K n
(    0.7 ) p
(setlinewidth) K
() p 24 T () S 32 T () S
(% of the square) c n
(    pw 0 ) p
(rlineto) K n
(    0 ph ) p
(neg) K
( ) p
(rlineto) K n
(    pw ) p
(neg) K
( 0 ) p
(rlineto) K n
(    ) p
(closepath) K
( ) p
(stroke) K n
(  ) p
(grestore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function water: prints a water mark in background) c n
(/water) L
( { ) p
(%def) c n
(code.ps) (Page 6/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (3/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(gsave) K n
(    scx scy ) p
(moveto) K
( ) p
(rotate) K n
(%%IncludeResource: font Times-Bold) C n
(  fTimes-Bold 100 ) p
(scalefont) K
( ) p
(setfont) K n
(    .97 ) p
(setgray) K n
(    ) p
(dup) K
( ) p
(stringwidth) K
( ) p
(pop) K
( 2 ) p
(div) K
( ) p
(neg) K
( -50 ) p
(rmoveto) K n
(    ) p
(show) K n
(  ) p
(grestore) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function rhead: prints the right header) c n
(/rhead) L
( {  ) p
(%def) c n
(  lx ly ) p
(moveto) K n
(  fHelvetica fnfs 0.8 ) p
(mul) K
( ) p
(scalefont) K
( ) p
(setfont) K n
(  l-show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(% Function footer \(cf rf lf -> -\)) c n
(/footer) L
( {) p n
(  fHelvetica fnfs 0.8 ) S
(mul) K
( ) p
(scalefont) K
( ) p
(setfont) K n
(  dx dy ) p
(moveto) K n
(  ) p
(show) K n
() p n
(  snx sny ) S
(moveto) K n
(  l-show) p n
(  ) N
(  fnx fny ) S
(moveto) K n
(  c-show) p n
(} ) S
(bind) K
( ) p
(def) K n
(%%EndResource) C n
(%%BeginResource: procset a2ps-black+white-Prolog 2.0 1) N
() p n
(% Function T\(ab\), jumps to the n-th tabulation in the current line) c n
(/T) L
( { ) p n
(  cw ) S
(mul) K
( x0 ) p
(add) K
( y0 ) p
(moveto) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function n: move to the next line) c n
(/n) L
( { ) p
(%def) c n
(  /y0 y0 bfs ) p
(sub) K
( store) p n
(  x0 y0 ) S
(moveto) K n
(} ) p
(bind) K
( ) p
(def) K n
() p n
(% Function N: show and move to the next line) c n
(/N) L
( {) p n
(  Show) N
(  /y0 y0 bfs ) S
(sub) K
( store) p n
(  x0 y0 ) S
(moveto) K n
(}  ) p
(bind) K
( ) p
(def) K n
() p n
(/S) L
( {) p n
(  Show) N
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/p) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fCourier bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/sy) L
( {) p n
(code.ps) (Page 7/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fSymbol bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/k) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fCourier-Oblique bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/K) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fCourier-Bold bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/c) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fCourier-Oblique bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/C) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fCourier-BoldOblique bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show ) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/l) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fHelvetica bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/L) L
( {) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fHelvetica-Bold bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show ) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/str) L
({) p n
(  ) S
(false) k
( UL) p n
(  ) S
(false) k
( BX) p n
(  fTimes-Roman bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(/e) L
({) p n
(  ) S
(false) k
( UL) p n
(  ) S
(true) k
( BX) p n
(  fHelvetica-Bold bfs ) S
(scalefont) K
( ) p
(setfont) K n
(  Show) p n
(} ) S
(bind) K
( ) p
(def) K n
() p n
(code.ps) (Page 8/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (4/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(%%EndResource) C n
(%%EndProlog) N
(%%BeginSetup) N
(%%IncludeResource: font Courier) N
(%%IncludeResource: font Courier-Oblique) N
(%%IncludeResource: font Courier-Bold) N
(%%IncludeResource: font Times-Roman) N
(%%IncludeResource: font Symbol) N
(%%IncludeResource: font Courier-BoldOblique) N
(%%BeginResource: encoding ISO-8859-1Encoding) N
(/ISO-8859-1Encoding [) p n
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright ) N
(/parenleft /parenright /asterisk /plus /comma /minus /period /slash ) N
(/zero /one /two /three /four /five /six /seven ) N
(/eight /nine /colon /semicolon /less /equal /greater /question ) N
(/at /A /B /C /D /E /F /G ) N
(/H /I /J /K /L /M /N /O ) N
(/P /Q /R /S /T /U /V /W ) N
(/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore ) N
(/quoteleft /a /b /c /d /e /f /g ) N
(/h /i /j /k /l /m /n /o ) N
(/p /q /r /s /t /u /v /w ) N
(/x /y /z /braceleft /bar /braceright /asciitilde /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef ) N
(/space /exclamdown /cent /sterling /currency /yen /brokenbar /section ) N
(/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered) N
( /macron ) N
(/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet ) N
(/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threeq) N
(uarters /questiondown ) N
(/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla ) N
(/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis ) N
(/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply ) N
(/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls ) N
(/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla ) N
(/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis ) N
(/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide ) N
(/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis ) N
(] ) S
(def) K n
(%%EndResource) C n
(% Initialize page description variables.) c n
(/sh 595 ) p
(def) K n
(/sw 842 ) p
(def) K n
(/llx 24 ) p
(def) K n
(/urx 818 ) p
(def) K n
(/ury 571 ) p
(def) K n
(/lly 24 ) p
(def) K n
(/#copies 1 ) p
(def) K n
(/th 15.000000 ) p
(def) K n
(/fnfs 11 ) p
(def) K n
(/bfs 8.005733 ) p
(def) K n
(/cw 4.803440 ) p
(def) K n
() p n
(% Dictionary for ISO-8859-1 support) c n
(/iso1) p
(dict) K
( 8 ) p
(dict) K
( ) p
(begin) K n
(code.ps) (Page 9/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  /fCourier ISO-8859-1Encoding /Courier reencode_font) p n
(  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font) N
(  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font) N
(  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font) N
(  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font) N
(  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font) N
(  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font) N
(  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font) N
(currentdict) K
( ) p
(end) K
( ) p
(def) K n
(/bgcolor [ 0 0 0 ] ) p
(def) K n
(/bg ) p
(false) k
( ) p
(def) K n
(/ul ) p
(false) k
( ) p
(def) K n
(/bx ) p
(false) k
( ) p
(def) K n
(% The font for line numbering) c n
(/f# /Helvetica ) p
(findfont) K
( bfs .6 ) p
(mul) K
( ) p
(scalefont) K
( ) p
(def) K n
(/fSymbol /Symbol ) p
(findfont) K
( ) p
(def) K n
(/hm fnfs 0.25 ) p
(mul) K
( ) p
(def) K n
(/pw) p n
(   cw 81.400000 ) S
(mul) K n
(def) N
(/ph) p n
(   501.959430 th ) S
(add) K n
(def) N
(/pmw urx llx ) p
(sub) K
( pw 2 ) p
(mul) K
( ) p
(sub) K
( 1 ) p
(div) K
( ) p
(def) K n
(/pmh 0 ) p
(def) K n
(/v 0 ) p
(def) K n
(/x [) p n
(  0) N
(  ) S
(dup) K
( pmw ) p
(add) K
( pw ) p
(add) K n
(] ) p
(def) K n
(/y [) p n
(  pmh ph ) S
(add) K
( 0 ) p
(mul) K
( ph ) p
(add) K n
(  ) p
(dup) K n
(] ) p
(def) K n
(/scx sw 2 ) p
(div) K
( ) p
(def) K n
(/scy sh 2 ) p
(div) K
( ) p
(def) K n
(/snx urx ) p
(def) K n
(/sny lly 2 ) p
(add) K
( ) p
(def) K n
(/dx llx ) p
(def) K n
(/dy sny ) p
(def) K n
(/fnx scx ) p
(def) K n
(/fny dy ) p
(def) K n
(/lx snx ) p
(def) K n
(/ly ury fnfs 0.8 ) p
(mul) K
( ) p
(sub) K
( ) p
(def) K n
(/sx 0 ) p
(def) K n
(/tab 8 ) p
(def) K n
(/x0 0 ) p
(def) K n
(/y0 0 ) p
(def) K n
(%%EndSetup) C n
() p n
(%%Page: \(1\) 1) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(code.ps) (Page 10/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (5/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(function) str
(\) K) p n
(\() S
( [ matCov ] = ) str
(\) p) p n
(\() S
(Covariance) str
(\) L) p n
(\() S
(\\\(moy,reg \\\)) str
(\) p n) p n
(\() S
(%Donne la covariance d'une matrice de valeur) str
(\) c n) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\() S
(%Affectation de la matrice de covariance) str
(\) N) p n
(\() S
(matCov=zeros\\\(3:3\\\);) str
(\) p n) p n
(\() S
(%Pour chaque couleur) str
(\) c n) p n
(\() S
(for) str
(\) K) p n
(\() S
( c=1:3) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(\() S
(for) str
(\) K) p n
(\() S
( c2=1:3) str
(\) p) p n
(\() S
(%On regarde les 3 couleurs) str
(\) c n) p n
(\() S
(        test=mean\\\(reg\\\(:,:,c\\\)\\\);) str
(\) p n) p n
(\() S
(        matCov\\\(c,c2\\\)=mean\\\(mean\\\(\\\(reg\\\(:,:,c\\\)-moy\\\(c\\\)\\\).*\\\(reg\\\(:,:,c2\\\)-moy\\\(c2\\\)\\\)\\\)\\\)) str
(\) N) p n
(\() S
(        moy\\\(c\\\)) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\() S
(end) str
(\) N) p n
(\(\) p n) N
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(Covariance.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 09, 16 17:58) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(Covariance.m) str
(\) \() p
(1/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 2) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [DistMaha] = ) str
(\) p) p n
(\() S
(DistanceMaha) str
(\) L) p n
(\() S
(\\\( img,moy,matCov \\\)) str
(\) p n) p n
(\() S
(%Fonction Distance de mahalanobis qui per permet avec d'avoir la distance) str
(\) c n) p n
(\() S
(%de mahanobis en tout point d'une image avec une moyenne et une covariance) str
(\) N) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\(\) p n) N
(\() S
(invCov=inv\\\(matCov\\\);) str
(\) S) p n
(\() S
(%On prend l'inverse) str
(\) c n) p n
(\() S
(imgR=double\\\(img\\\(:,:,1\\\)\\\);) str
(\) p) p n
(\() S
(%On affecte les 3 composantes) str
(\) c n) p n
(\() S
(imgV=double\\\(img\\\(:,:,2\\\)\\\);) str
(\) p n) p n
(\() S
(imgB=double\\\(img\\\(:,:,3\\\)\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%creation de la matrice des xi- moyenne , avec tous les pixels d'un coup) str
(\) c n) p n
(\() S
(lineR=reshape\\\(imgR,1,numel\\\(imgR\\\)\\\);) str
(\) p n) p n
(\() S
(lineV=reshape\\\(imgV,1,numel\\\(imgV\\\)\\\);) str
(\) N) p n
(code.ps) (Page 11/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(lineB=reshape\\\(imgB,1,numel\\\(imgB\\\)\\\);) str
(\) N) p n
(\() S
(lineR=lineR-moy\\\(1\\\);) str
(\) N) p n
(\() S
(lineV=lineV-moy\\\(2\\\);) str
(\) N) p n
(\() S
(lineB=lineB-moy\\\(3\\\);) str
(\) N) p n
(\() S
(Vectmaha=[lineR;lineV;lineB];) str
(\) N) p n
(\(\) N) N
(\(\) N) N
(\() S
(W= invCov * Vectmaha;) str
(\) N) p n
(\() S
(DistMaha= Vectmaha .* W;) str
(\) N) p n
(\(\) N) N
(\() S
(DistMaha = sum\\\(DistMaha,1\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%On recr\\351e l'image avec les distances) str
(\) c n) p n
(\() S
(DistMaha= reshape\\\( DistMaha, [size\\\(img,1\\\),size\\\(img,2\\\)]\\\);) str
(\) p n) p n
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(DistanceMaha.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 12:56) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(DistanceMaha.m) str
(\) \() p
(2/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 3) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ moy,cov ] = ) str
(\) p) p n
(\() S
(InitMain) str
(\) L) p n
(\() S
(\\\( image \\\)) str
(\) p n) p n
(\() S
(%R\\351cup\\351ration du mod\\350le de picot pour la main ) str
(\) c n) p n
(\() S
(interest=image\\\(123:147,283:290,:\\\);) str
(\) p) p n
(\() S
(%r\\351cup\\351ration de la zone d'int\\351r\\352t de la main) str
(\) c n) p n
(\() S
(moy=moyenne\\\(interest\\\);) str
(\) p n) p n
(\() S
(cov=Covariance\\\(moy,interest\\\);) str
(\) N) p n
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(InitMain.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 12:58) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(InitMain.m) str
(\) \() p
(3/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 4) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(code.ps) (Page 12/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (6/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ region ] = ) str
(\) p) p n
(\() S
(InterestRegion) str
(\) L) p n
(\() S
(\\\( image \\\)) str
(\) p n) p n
(\() S
(%R\\351cup\\351ration de la zone d'int\\351r\\352t de l'image) str
(\) c n) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\() S
(region=image\\\(143:153,185:194,1:3\\\);) str
(\) p n) p n
(\(\) N) N
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(InterestRegion.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 12:59) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(InterestRegion.m) str
(\) \() p
(4/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 5) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ordonneActuel ] = ) str
(\) p) p n
(\() S
(TestProche) str
(\) L) p n
(\() S
(\\\(old, actual \\\)) str
(\) p n) p n
(\() S
(%ordonnancement des barycentres) str
(\) c n) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\(\) p n) N
(\() S
(ordonneActuel=zeros\\\(2,4\\\);) str
(\) S) p n
(\() S
(%Cr\\351ation de la nouvelle matrice) str
(\) c n) p n
(\() S
(for) str
(\) K) p n
(\() S
( i=1:4) str
(\) p) p n
(\() S
(%pour chaque barycentres de l'image pr\\351c\\351dente) str
(\) c n) p n
(\() S
(    minimum=realmax;) str
(\) p) p n
(\() S
(%On affecte le plus grand des r\\351els ) str
(\) c n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(for) str
(\) K) p n
(\() S
( j=1:4) str
(\) p) p n
(\() S
(%POur chaque point de la nouvelle matrice) str
(\) c n) p n
(\() S
(    distance=\\\(actual\\\(1,j\\\)-old\\\(1,i\\\)\\\)^2+\\\(actual\\\(2,j\\\)-old\\\(2,i\\\)\\\)^2;) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(\() S
(%On fait la distance euclidienne entre les deux points) str
(\) c n) p n
(\() S
(        ) str
(\) p) p n
(\() S
(if) str
(\) K) p n
(\() S
(\\\(distance<minimum\\\)) str
(\) p) p n
(\() S
(%Si le point est plus proche ) str
(\) c n) p n
(\() S
(            minimum=distance;) str
(\) p) p n
(\() S
(%on affecte le nouveau minimum) str
(\) c n) p n
(code.ps) (Page 13/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(            ordonneActuel\\\(:,i\\\)=actual\\\(:,j\\\);) str
(\) p) p n
(\() S
(%Et on affecte la matrice ordonn\\351e) str
(\) c n) p n
(\() S
(        ) str
(\) p) p n
(\() S
(end) str
(\) K n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(end) str
(\) K n) p n
(\() S
(end) str
(\) N) p n
(\(\) p n) N
(\() S
(TestProche.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 13:08) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(TestProche.m) str
(\) \() p
(5/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 6) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ matBary ] = ) str
(\) p) p n
(\() S
(barycentre) str
(\) L) p n
(\() S
(\\\( img \\\)) str
(\) p n) p n
(\() S
(%r\\351cup\\350re une image et retourne la position des barycentres) str
(\) c n) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\() S
(    ) str
(\) p) p n
(\() S
(%Labellisation et affectation de la nouvelle matrice) str
(\) c n) p n
(\() S
(    img=bwlabel\\\(img\\\);) str
(\) p n) p n
(\() S
(    matBary=zeros\\\(2,4\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(%Pour les 4 points, affectation des barycentres) str
(\) c n) p n
(\() S
(   ) str
(\) p) p n
(\() S
(for) str
(\) K) p n
(\() S
( i=1:4) str
(\) p n) p n
(\() S
(    [y, x] = find\\\(img == i\\\);) str
(\) N) p n
(\() S
(    matBary\\\(1,i\\\) = mean\\\(double\\\(x\\\)\\\);) str
(\) N) p n
(\() S
(    matBary\\\(2,i\\\) = mean\\\(double\\\(y\\\)\\\);) str
(\) N) p n
(\() S
(   ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\() S
(end) str
(\) N) p n
(\(\) p n) N
(\() S
(barycentre.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 09, 16 17:56) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(barycentre.m) str
(\) \() p
(6/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 7) C n
(%%BeginPageSetup) N
(code.ps) (Page 14/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (7/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (15-16) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ binary ] = ) str
(\) p) p n
(\() S
(binarisationMain) str
(\) L) p n
(\() S
(\\\( image,moy,cov \\\)) str
(\) p n) p n
(\() S
(%Binarse la main) str
(\) c n) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\() S
(%D\\351finition du seuil et distance de maha avec celui ci ) str
(\) N) p n
(\() S
(seuil=200;) str
(\) p n) p n
(\() S
(distancemaha=DistanceMaha\\\(image,moy,cov\\\);) str
(\) N) p n
(\() S
(binary=seuillage\\\(distancemaha,seuil\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(binarisationMain.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 09, 16 17:57) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(binarisationMain.m) str
(\) \() p
(7/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1-2\) 8) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(%Chargement des vid\\351os) str
(\) c n) p n
(\() S
(obj=VideoReader\\\(') str
(\) p) p n
(\() S
(video.avi) str
(\) str) p n
(\() S
('\\\);) str
(\) p n) p n
(\() S
(myVideo=VideoReader\\\(') str
(\) S) p n
(\() S
(InsideIn.avi) str
(\) str) p n
(\() S
('\\\);) str
(\) p n) p n
(\() S
(myImg=read\\\(myVideo,1\\\);) str
(\) N) p n
(\() S
(result=read\\\(obj,1\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%Mod\\350le de picot) str
(\) c n) p n
(\() S
(interest=InterestRegion\\\(result\\\);) str
(\) p n) p n
(\() S
(moy=moyenne\\\(interest\\\);) str
(\) N) p n
(\() S
(cov=Covariance\\\(moy,interest\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%Initialisation du videoWriter) str
(\) c n) p n
(\() S
(videoFinale=VideoWriter\\\(') str
(\) p) p n
(\() S
(output.avi) str
(\) str) p n
(\() S
('\\\);) str
(\) p n) p n
(code.ps) (Page 15/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(open\\\(videoFinale\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%Mod\\350le de picot pour la main) str
(\) c n) p n
(\() S
(main=read\\\(obj,50\\\);) str
(\) p n) p n
(\() S
([moyMain,CovMain]=InitMain\\\(main\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%Premi\\350re image) str
(\) c n) p n
(\() S
(distancemaha=DistanceMaha\\\(result,moy,cov\\\);) str
(\) p n) p n
(\() S
(seuil=500;) str
(\) N) p n
(\() S
(binary=seuillage\\\(distancemaha,seuil\\\);) str
(\) N) p n
(\() S
(binary=postTraitement\\\(binary\\\);) str
(\) N) p n
(\() S
(MatBary=barycentre\\\(binary\\\);) str
(\) N) p n
(\() S
(image\\\(binary\\\);) str
(\) N) p n
(\() S
(colormap\\\(gray\\\);) str
(\) N) p n
(\(\) N) N
(\() S
(%Ordonnancement des points bleu) str
(\) c n) p n
(\() S
(MatBary=MatBary\\\(:,[1 2 4 3]\\\);) str
(\) p n) p n
(\(\) N) N
(\(\) N) N
(\() S
(%R\\351cup\\351ration de la matrice binaire de la main) str
(\) c n) p n
(\() S
( MainBinaire=binarisationMain\\\(result,moyMain,CovMain\\\);) str
(\) p n) p n
(\() S
( ) str
(\) N) p n
(\() S
( ) str
(\) S) p n
(\() S
(%cr\\351ation de l'image et insertion dan la vid\\351o) str
(\) c n) p n
(\() S
( newFrame=motif2frame\\\(myImg,result,MatBary\\\(1,:\\\),MatBary\\\(2,:\\\),1/1.20,MainBinaire\\\)) str
(\) p n) p n
(\() S
(;) str
(\) N) p n
(\() S
( writeVideo\\\(videoFinale,newFrame\\\);) str
(\) N) p n
(\() S
( ) str
(\) N) p n
(\() S
( ) str
(\) S) p n
(\() S
(%Affectation de la matrice pour le testProche) str
(\) c n) p n
(\() S
(  old=MatBary;) str
(\) p n) p n
(\() S
(  j=0) str
(\) N) p n
(\() S
(  ) str
(\) S) p n
(\() S
(%Pour chaque image) str
(\) c n) p n
(\() S
( ) str
(\) p) p n
(\() S
(for) str
(\) K) p n
(\() S
( i=2:obj.NumberOfFrames) str
(\) p n) p n
(\() S
(     ) str
(\) S) p n
(\() S
(%D\\351callage temporel) str
(\) c n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(if) str
(\) K) p n
(\() S
(\\\(i<20\\\)) str
(\) p n) p n
(\() S
(        myImg=read\\\(myVideo,1\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(else) str
(\) K n) p n
(\() S
(        myImg=read\\\(myVideo,i-19\\\);) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(%R\\351cup\\351ration de l'image i et distance maha pour la main et les points) str
(\) c n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(%bleus) str
(\) c n) p n
(\() S
(    result=read\\\(obj,i\\\);) str
(\) p n) p n
(\() S
(    distancemaha=DistanceMaha\\\(result,moy,cov\\\);) str
(\) N) p n
(\() S
(    binary=seuillage\\\(distancemaha,seuil\\\);) str
(\) N) p n
(\() S
(    j=j+1) str
(\) N) p n
(\() S
(    binary=postTraitement\\\(binary\\\);) str
(\) N) p n
(\() S
(    MainBinaire=binarisationMain\\\(result,moyMain,CovMain\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(%Barycentres) str
(\) c n) p n
(\() S
(    MatBary=barycentre\\\(binary\\\);) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(code.ps) (Page 16/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (8/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (17-18) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(%Ordonnancement) str
(\) c n) p n
(\() S
(mainScript.m) str
(\) \() p
(Page 1/2) str
(\) \() p
(d\\303\\251c 09, 16 18:44) str
(\) title) p n
(border) N
(/v 1 store) N
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(    BarycentresActuels=TestProche\\\(old,MatBary\\\);) str
(\) p n) p n
(\() S
(    ) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(%Affectation de la nouvelle et \\351criture) str
(\) c n) p n
(\() S
(    newFrame=motif2frame\\\(myImg,result,BarycentresActuels\\\(1,:\\\),BarycentresActuels) str
(\) p n) p n
(\() S
(\\\(2,:\\\),1/1.20,MainBinaire\\\);) str
(\) N) p n
(\() S
(    writeVideo\\\(videoFinale,newFrame\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(%Affectation des barycentres actuels) str
(\) c n) p n
(\() S
(    old=BarycentresActuels;) str
(\) p n) p n
(\() S
( ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(%Fermeture du stream) str
(\) c n) p n
(\() S
(close\\\(videoFinale\\\);) str
(\) p n) p n
(\() S
(mainScript.m) str
(\) \() p
(Page 2/2) str
(\) \() p
(d\\303\\251c 09, 16 18:44) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(mainScript.m) str
(\) \() p
(8/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 9) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( frame=) str
(\) p) p n
(\() S
(motif2frame) str
(\) L) p n
(\() S
(\\\(motif,frame,x,y,scale,mask\\\)) str
(\) p n) p n
(\() S
(% motif : image 'source' \\\(couleur index\\351e ou vraie couleur\\\)) str
(\) c n) p n
(\() S
(% frame : image 'destination' \\\(vraie couleur\\\)) str
(\) N) p n
(\() S
(% x,y   : coordonn\\351es des 4 sommets de la 'source' dans la 'destination', vecteu) str
(\) N) p n
(\() S
(rs lignes) str
(\) N) p n
(\() S
(% scale : param\\350tre d'\\351chelle \\\(exemple : 1\\\)  ) str
(\) N) p n
(\() S
(% mask  : masque 'destination' des pixels \\340 ne pas modifier, \\\(exemple : matrice ) str
(\) N) p n
(\() S
(de 0\\\)  ) str
(\) N) p n
(\(\) p n) N
(\() S
([hIn,wIn,dIn]=size\\\(motif\\\);) str
(\) N) p n
(\() S
(xIn=[1 wIn wIn 1];) str
(\) N) p n
(\() S
(yIn=[1 1 hIn hIn];) str
(\) N) p n
(\() S
(xIn=wIn/2+scale*\\\(xIn-wIn/2\\\);) str
(\) N) p n
(\() S
(yIn=hIn/2+scale*\\\(yIn-hIn/2\\\);) str
(\) N) p n
(\() S
(tForm=cp2tform\\\([xIn' yIn'],[x' y'],') str
(\) S) p n
(\() S
(projective) str
(\) str) p n
(\() S
('\\\);) str
(\) p n) p n
(code.ps) (Page 17/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(motif=double\\\(motif\\\);) str
(\) N) p n
(\() S
(for) str
(\) K) p n
(\() S
( p=1:3) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(\() S
(if) str
(\) K) p n
(\() S
( dIn == 1) str
(\) p n) p n
(\() S
(        [motifTransform,xData,yData]=imtransform\\\(motif\\\(:,:\\\),tForm,') str
(\) S) p n
(\() S
(Fill) str
(\) str) p n
(\() S
(',-1\\\);) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(\() S
(else) str
(\) K n) p n
(\() S
(        [motifTransform,xData,yData]=imtransform\\\(motif\\\(:,:,p\\\),tForm,') str
(\) p) p n
(\() S
(Fill) str
(\) str) p n
(\() S
(',-1\\\);) str
(\) p n) p n
(\() S
(    ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\() S
(    [hOut,wOut]=size\\\(motifTransform\\\);) str
(\) p n) p n
(\() S
(    xOut=fix\\\(xData\\\(1\\\)\\\);) str
(\) N) p n
(\() S
(    yOut=fix\\\(yData\\\(1\\\)\\\);) str
(\) N) p n
(\() S
(    dxOut=xOut:xOut+wOut-1;) str
(\) N) p n
(\() S
(    dyOut=yOut:yOut+hOut-1;) str
(\) N) p n
(\() S
(    pos=find\\\(mask\\\(dyOut,dxOut\\\)==1\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(if) str
(\) K) p n
(\() S
( \\\(length\\\(pos\\\)\\\)) str
(\) p n) p n
(\() S
(        motifTransform\\\(pos\\\)=-1;) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\() S
(    pos=find\\\(motifTransform~=-1\\\);) str
(\) p n) p n
(\() S
(    frameCut=frame\\\(dyOut,dxOut,p\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(if) str
(\) K) p n
(\() S
( \\\(length\\\(pos\\\)\\\)) str
(\) p n) p n
(\() S
(        frameCut\\\(pos\\\)=uint8\\\(motifTransform\\\(pos\\\)\\\);) str
(\) N) p n
(\() S
(    ) str
(\) S) p n
(\() S
(end) str
(\) K n) p n
(\() S
(    frame\\\(dyOut,dxOut,p\\\)=frameCut;    ) str
(\) p n) p n
(\() S
(end) str
(\) K n) p n
(\() S
(end) str
(\) S) p n
(\() S
(motif2frame.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(nov 22, 16 8:38) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(motif2frame.m) str
(\) \() p
(9/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 10) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ moy] = ) str
(\) p) p n
(\() S
(moyenne) str
(\) L) p n
(code.ps) (Page 18/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (9/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (19-20) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(\() p
(\\\( reg \\\)) str
(\) p n) p n
(\() S
(%Calcul) str
(\) c n) p n
(\() S
(moy=zeros\\\(3,1\\\);) str
(\) p) p n
(\() S
(%Cr\\351ation de la matrice) str
(\) c n) p n
(\(\) p n) N
(\() S
(        ) str
(\) S) p n
(\() S
(for) str
(\) K) p n
(\() S
( c=1:3) str
(\) p n) p n
(\() S
(            moy\\\(c\\\)=mean\\\(mean\\\(reg\\\(:,:,c\\\)\\\)\\\);) str
(\) S) p n
(\() S
(%Calcul de la moyenne ) str
(\) c n) p n
(\() S
(            ) str
(\) p) p n
(\() S
(%pour chaque couleur de la zone d'int\\351r\\352t) str
(\) c n) p n
(\() S
(        ) str
(\) p) p n
(\() S
(end) str
(\) K n) p n
(\() S
(end) str
(\) N) p n
(\(\) p n) N
(\() S
(moyenne.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 13:03) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(moyenne.m) str
(\) \() p
(10/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(%%Page: \(1\) 11) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ Im ] = ) str
(\) p) p n
(\() S
(postTraitement) str
(\) L) p n
(\() S
(\\\( binary \\\)) str
(\) p n) p n
(\() S
(%Postraitement, qui fait une dilatation et une \\351rosion sur une image) str
(\) c n) p n
(\() S
(%donn\\351e.) str
(\) N) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\() S
(se=strel\\\(') str
(\) p) p n
(\() S
(disk) str
(\) str) p n
(\() S
(',5\\\);) str
(\) p) p n
(\() S
(%S\\351lection de la forme ) str
(\) c n) p n
(\() S
(Im= imerode\\\(binary, se\\\);) str
(\) p) p n
(\() S
(%Erosion ) str
(\) c n) p n
(\() S
(Im=imdilate\\\(Im,se\\\);) str
(\) p) p n
(\() S
(%Dilatation) str
(\) c n) p n
(\() S
(Im=Im.*255;) str
(\) p n) p n
(\() S
(end) str
(\) K n) p n
(\(\) p n) N
(\() S
(postTraitement.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 12:54) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(postTraitement.m) str
(\) \() p
(11/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
(code.ps) (Page 19/20) (d\303\251c 11, 16 13:14) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(%%Page: \(1\) 12) C n
(%%BeginPageSetup) N
(/pagesave ) p
(save) K
( ) p
(def) K n
(sh 0 ) p
(translate) K
( 90 ) p
(rotate) K n
(%%EndPageSetup) C n
(iso1) p
(dict) K
( ) p
(begin) K n
(gsave) N
(llx lly 12 ) p
(add) K
( ) p
(translate) K n
(/v 0 store) p n
(/x0 x v ) S
(get) K
( 3.362408 ) p
(add) K
( sx cw ) p
(mul) K
( ) p
(add) K
( store) p n
(/y0 y v ) S
(get) K
( bfs th ) p
(add) K
( ) p
(sub) K
( store) p n
(x0 y0 ) S
(moveto) K n
(\() p
(function) str
(\) K) p n
(\() S
( [ imBinaire ] = ) str
(\) p) p n
(\() S
(seuillage) str
(\) L) p n
(\() S
(\\\( distMaha,seuil \\\)) str
(\) p n) p n
(\() S
(%R\\351cup\\351ration de l'image bianire avec le sueuillage) str
(\) c n) p n
(\() S
(%   Detailed explanation goes here) str
(\) N) p n
(\(\) p n) N
(\() S
(imBinaire=distMaha;) str
(\) S) p n
(\() S
(%R\\351cup\\351ration de la matrice de distance) str
(\) c n) p n
(\() S
(for) str
(\) K) p n
(\() S
( i=1:size\\\(distMaha,1\\\)) str
(\) p) p n
(\() S
(%Pour chaque ligne) str
(\) c n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(for) str
(\) K) p n
(\() S
( j=1:size\\\(distMaha,2\\\)) str
(\) p) p n
(\() S
(%Et chaque colonnes) str
(\) c n) p n
(\() S
(        ) str
(\) p) p n
(\() S
(if) str
(\) K) p n
(\() S
( distMaha\\\(i,j\\\)<seuil) str
(\) p) p n
(\() S
(%Si la distance est plus petite que le seuil) str
(\) c n) p n
(\() S
(            imBinaire\\\(i,j\\\)=1;) str
(\) p) p n
(\() S
(%Alors l'image bianire=1) str
(\) c n) p n
(\() S
(        ) str
(\) p) p n
(\() S
(else) str
(\) K) p n
(\() S
( imBinaire\\\(i,j\\\)) str
(\) p) p n
(\() S
(%Sinon =0) str
(\) c n) p n
(\() S
(        ) str
(\) p) p n
(\() S
(end) str
(\) K n) p n
(\() S
(    ) str
(\) p) p n
(\() S
(end) str
(\) K n) p n
(\() S
(end) str
(\) N) p n
(\() S
(end) str
(\) N) p n
(\(\) p n) N
(\(\) N) N
(\() S
(seuillage.m) str
(\) \() p
(Page 1/1) str
(\) \() p
(d\\303\\251c 11, 16 13:05) str
(\) title) p n
(border) N
(grestore) K n
(\() p
(Printed by maxime da silva) str
(\) rhead) p n
(\() S
(seuillage.m) str
(\) \() p
(12/12) str
(\) \() p
(Dimanche d\\303\\251cembre 11, 2016) str
(\) footer) p n
(end) K
( ) p
(% of iso1dict) c n
(pagesave ) p
(restore) K n
(showpage) N
() p n
(%%Trailer) C n
(end) K n
(%%EOF) C n
(code.ps) (Page 20/20) (d\303\251c 11, 16 13:14) title
border
grestore
(Printed by maxime da silva) rhead
(code.ps) (10/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ matCov ] = ) p
(Covariance) L
(\(moy,reg \)) p n
(%Donne la covariance d'une matrice de valeur) c n
(%   Detailed explanation goes here) N
(%Affectation de la matrice de covariance) N
(matCov=zeros\(3:3\);) p n
(%Pour chaque couleur) c n
(for) K
( c=1:3) p n
(    ) S
(for) K
( c2=1:3) p
(%On regarde les 3 couleurs) c n
(        test=mean\(reg\(:,:,c\)\);) p n
(        matCov\(c,c2\)=mean\(mean\(\(reg\(:,:,c\)-moy\(c\)\).*\(reg\(:,:,c2\)-moy\(c2\)\)\)\)) N
(        moy\(c\)) N
(    ) S
(end) K n
(end) N
() p n
(end) K n
() p n
(Covariance.m) (Page 1/1) (d\303\251c 09, 16 17:58) title
border
grestore
(Printed by maxime da silva) rhead
(Covariance.m) (11/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [DistMaha] = ) p
(DistanceMaha) L
(\( img,moy,matCov \)) p n
(%Fonction Distance de mahalanobis qui per permet avec d'avoir la distance) c n
(%de mahanobis en tout point d'une image avec une moyenne et une covariance) N
(%   Detailed explanation goes here) N
() p n
(invCov=inv\(matCov\);) S
(%On prend l'inverse) c n
(imgR=double\(img\(:,:,1\)\);) p
(%On affecte les 3 composantes) c n
(imgV=double\(img\(:,:,2\)\);) p n
(imgB=double\(img\(:,:,3\)\);) N
() N
(%creation de la matrice des xi- moyenne , avec tous les pixels d'un coup) c n
(lineR=reshape\(imgR,1,numel\(imgR\)\);) p n
(lineV=reshape\(imgV,1,numel\(imgV\)\);) N
(lineB=reshape\(imgB,1,numel\(imgB\)\);) N
(lineR=lineR-moy\(1\);) N
(lineV=lineV-moy\(2\);) N
(lineB=lineB-moy\(3\);) N
(Vectmaha=[lineR;lineV;lineB];) N
() N
() N
(W= invCov * Vectmaha;) N
(DistMaha= Vectmaha .* W;) N
() N
(DistMaha = sum\(DistMaha,1\);) N
() N
(%On recr\351e l'image avec les distances) c n
(DistMaha= reshape\( DistMaha, [size\(img,1\),size\(img,2\)]\);) p n
(end) K n
() p n
(DistanceMaha.m) (Page 1/1) (d\303\251c 11, 16 12:56) title
border
grestore
(Printed by maxime da silva) rhead
(DistanceMaha.m) (12/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ moy,cov ] = ) p
(InitMain) L
(\( image \)) p n
(%R\351cup\351ration du mod\350le de picot pour la main ) c n
(interest=image\(123:147,283:290,:\);) p
(%r\351cup\351ration de la zone d'int\351r\352t de la main) c n
(moy=moyenne\(interest\);) p n
(cov=Covariance\(moy,interest\);) N
(end) K n
() p n
(InitMain.m) (Page 1/1) (d\303\251c 11, 16 12:58) title
border
grestore
(Printed by maxime da silva) rhead
(InitMain.m) (13/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ region ] = ) p
(InterestRegion) L
(\( image \)) p n
(%R\351cup\351ration de la zone d'int\351r\352t de l'image) c n
(%   Detailed explanation goes here) N
(region=image\(143:153,185:194,1:3\);) p n
() N
(end) K n
() p n
(InterestRegion.m) (Page 1/1) (d\303\251c 11, 16 12:59) title
border
grestore
(Printed by maxime da silva) rhead
(InterestRegion.m) (14/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ordonneActuel ] = ) p
(TestProche) L
(\(old, actual \)) p n
(%ordonnancement des barycentres) c n
(%   Detailed explanation goes here) N
() p n
(ordonneActuel=zeros\(2,4\);) S
(%Cr\351ation de la nouvelle matrice) c n
(for) K
( i=1:4) p
(%pour chaque barycentres de l'image pr\351c\351dente) c n
(    minimum=realmax;) p
(%On affecte le plus grand des r\351els ) c n
(    ) p
(for) K
( j=1:4) p
(%POur chaque point de la nouvelle matrice) c n
(    distance=\(actual\(1,j\)-old\(1,i\)\)^2+\(actual\(2,j\)-old\(2,i\)\)^2;) p n
(    ) S
(%On fait la distance euclidienne entre les deux points) c n
(        ) p
(if) K
(\(distance<minimum\)) p
(%Si le point est plus proche ) c n
(            minimum=distance;) p
(%on affecte le nouveau minimum) c n
(            ordonneActuel\(:,i\)=actual\(:,j\);) p
(%Et on affecte la matrice ordonn\351e) c n
(        ) p
(end) K n
(    ) p
(end) K n
() p n
(end) K n
(end) N
() p n
(TestProche.m) (Page 1/1) (d\303\251c 11, 16 13:08) title
border
grestore
(Printed by maxime da silva) rhead
(TestProche.m) (15/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ matBary ] = ) p
(barycentre) L
(\( img \)) p n
(%r\351cup\350re une image et retourne la position des barycentres) c n
(%   Detailed explanation goes here) N
(    ) p
(%Labellisation et affectation de la nouvelle matrice) c n
(    img=bwlabel\(img\);) p n
(    matBary=zeros\(2,4\);) N
(    ) S
(%Pour les 4 points, affectation des barycentres) c n
(   ) p
(for) K
( i=1:4) p n
(    [y, x] = find\(img == i\);) N
(    matBary\(1,i\) = mean\(double\(x\)\);) N
(    matBary\(2,i\) = mean\(double\(y\)\);) N
(   ) S
(end) K n
(end) N
() p n
(barycentre.m) (Page 1/1) (d\303\251c 09, 16 17:56) title
border
grestore
(Printed by maxime da silva) rhead
(barycentre.m) (16/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ binary ] = ) p
(binarisationMain) L
(\( image,moy,cov \)) p n
(%Binarse la main) c n
(%   Detailed explanation goes here) N
(%D\351finition du seuil et distance de maha avec celui ci ) N
(seuil=200;) p n
(distancemaha=DistanceMaha\(image,moy,cov\);) N
(binary=seuillage\(distancemaha,seuil\);) N
() N
(end) K n
() p n
(binarisationMain.m) (Page 1/1) (d\303\251c 09, 16 17:57) title
border
grestore
(Printed by maxime da silva) rhead
(binarisationMain.m) (17/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(%Chargement des vid\351os) c n
(obj=VideoReader\(') p
(video.avi) str
('\);) p n
(myVideo=VideoReader\(') S
(InsideIn.avi) str
('\);) p n
(myImg=read\(myVideo,1\);) N
(result=read\(obj,1\);) N
() N
(%Mod\350le de picot) c n
(interest=InterestRegion\(result\);) p n
(moy=moyenne\(interest\);) N
(cov=Covariance\(moy,interest\);) N
() N
(%Initialisation du videoWriter) c n
(videoFinale=VideoWriter\(') p
(output.avi) str
('\);) p n
(open\(videoFinale\);) N
() N
(%Mod\350le de picot pour la main) c n
(main=read\(obj,50\);) p n
([moyMain,CovMain]=InitMain\(main\);) N
() N
(%Premi\350re image) c n
(distancemaha=DistanceMaha\(result,moy,cov\);) p n
(seuil=500;) N
(binary=seuillage\(distancemaha,seuil\);) N
(binary=postTraitement\(binary\);) N
(MatBary=barycentre\(binary\);) N
(image\(binary\);) N
(colormap\(gray\);) N
() N
(%Ordonnancement des points bleu) c n
(MatBary=MatBary\(:,[1 2 4 3]\);) p n
() N
() N
(%R\351cup\351ration de la matrice binaire de la main) c n
( MainBinaire=binarisationMain\(result,moyMain,CovMain\);) p n
( ) N
( ) S
(%cr\351ation de l'image et insertion dan la vid\351o) c n
( newFrame=motif2frame\(myImg,result,MatBary\(1,:\),MatBary\(2,:\),1/1.20,MainBinaire\)) p n
(;) N
( writeVideo\(videoFinale,newFrame\);) N
( ) N
( ) S
(%Affectation de la matrice pour le testProche) c n
(  old=MatBary;) p n
(  j=0) N
(  ) S
(%Pour chaque image) c n
( ) p
(for) K
( i=2:obj.NumberOfFrames) p n
(     ) S
(%D\351callage temporel) c n
(    ) p
(if) K
(\(i<20\)) p n
(        myImg=read\(myVideo,1\);) N
(    ) S
(else) K n
(        myImg=read\(myVideo,i-19\);) p n
(    ) S
(end) K n
(    ) p
(%R\351cup\351ration de l'image i et distance maha pour la main et les points) c n
(    ) p
(%bleus) c n
(    result=read\(obj,i\);) p n
(    distancemaha=DistanceMaha\(result,moy,cov\);) N
(    binary=seuillage\(distancemaha,seuil\);) N
(    j=j+1) N
(    binary=postTraitement\(binary\);) N
(    MainBinaire=binarisationMain\(result,moyMain,CovMain\);) N
(    ) S
(%Barycentres) c n
(    MatBary=barycentre\(binary\);) p n
(    ) S
(%Ordonnancement) c n
(mainScript.m) (Page 1/2) (d\303\251c 09, 16 18:44) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    BarycentresActuels=TestProche\(old,MatBary\);) p n
(    ) N
(    ) S
(%Affectation de la nouvelle et \351criture) c n
(    newFrame=motif2frame\(myImg,result,BarycentresActuels\(1,:\),BarycentresActuels) p n
(\(2,:\),1/1.20,MainBinaire\);) N
(    writeVideo\(videoFinale,newFrame\);) N
(    ) S
(%Affectation des barycentres actuels) c n
(    old=BarycentresActuels;) p n
( ) S
(end) K n
() p n
(%Fermeture du stream) c n
(close\(videoFinale\);) p n
(mainScript.m) (Page 2/2) (d\303\251c 09, 16 18:44) title
border
grestore
(Printed by maxime da silva) rhead
(mainScript.m) (18/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( frame=) p
(motif2frame) L
(\(motif,frame,x,y,scale,mask\)) p n
(% motif : image 'source' \(couleur index\351e ou vraie couleur\)) c n
(% frame : image 'destination' \(vraie couleur\)) N
(% x,y   : coordonn\351es des 4 sommets de la 'source' dans la 'destination', vecteu) N
(rs lignes) N
(% scale : param\350tre d'\351chelle \(exemple : 1\)  ) N
(% mask  : masque 'destination' des pixels \340 ne pas modifier, \(exemple : matrice ) N
(de 0\)  ) N
() p n
([hIn,wIn,dIn]=size\(motif\);) N
(xIn=[1 wIn wIn 1];) N
(yIn=[1 1 hIn hIn];) N
(xIn=wIn/2+scale*\(xIn-wIn/2\);) N
(yIn=hIn/2+scale*\(yIn-hIn/2\);) N
(tForm=cp2tform\([xIn' yIn'],[x' y'],') S
(projective) str
('\);) p n
(motif=double\(motif\);) N
(for) K
( p=1:3) p n
(    ) S
(if) K
( dIn == 1) p n
(        [motifTransform,xData,yData]=imtransform\(motif\(:,:\),tForm,') S
(Fill) str
(',-1\);) p n
(    ) S
(else) K n
(        [motifTransform,xData,yData]=imtransform\(motif\(:,:,p\),tForm,') p
(Fill) str
(',-1\);) p n
(    ) S
(end) K n
(    [hOut,wOut]=size\(motifTransform\);) p n
(    xOut=fix\(xData\(1\)\);) N
(    yOut=fix\(yData\(1\)\);) N
(    dxOut=xOut:xOut+wOut-1;) N
(    dyOut=yOut:yOut+hOut-1;) N
(    pos=find\(mask\(dyOut,dxOut\)==1\);) N
(    ) S
(if) K
( \(length\(pos\)\)) p n
(        motifTransform\(pos\)=-1;) N
(    ) S
(end) K n
(    pos=find\(motifTransform~=-1\);) p n
(    frameCut=frame\(dyOut,dxOut,p\);) N
(    ) S
(if) K
( \(length\(pos\)\)) p n
(        frameCut\(pos\)=uint8\(motifTransform\(pos\)\);) N
(    ) S
(end) K n
(    frame\(dyOut,dxOut,p\)=frameCut;    ) p n
(end) K n
(end) S
(motif2frame.m) (Page 1/1) (nov 22, 16 8:38) title
border
grestore
(Printed by maxime da silva) rhead
(motif2frame.m) (19/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 20
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ moy] = ) p
(moyenne) L
(\( reg \)) p n
(%Calcul) c n
(moy=zeros\(3,1\);) p
(%Cr\351ation de la matrice) c n
() p n
(        ) S
(for) K
( c=1:3) p n
(            moy\(c\)=mean\(mean\(reg\(:,:,c\)\)\);) S
(%Calcul de la moyenne ) c n
(            ) p
(%pour chaque couleur de la zone d'int\351r\352t) c n
(        ) p
(end) K n
(end) N
() p n
(moyenne.m) (Page 1/1) (d\303\251c 11, 16 13:03) title
border
grestore
(Printed by maxime da silva) rhead
(moyenne.m) (20/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 21
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ Im ] = ) p
(postTraitement) L
(\( binary \)) p n
(%Postraitement, qui fait une dilatation et une \351rosion sur une image) c n
(%donn\351e.) N
(%   Detailed explanation goes here) N
(se=strel\(') p
(disk) str
(',5\);) p
(%S\351lection de la forme ) c n
(Im= imerode\(binary, se\);) p
(%Erosion ) c n
(Im=imdilate\(Im,se\);) p
(%Dilatation) c n
(Im=Im.*255;) p n
(end) K n
() p n
(postTraitement.m) (Page 1/1) (d\303\251c 11, 16 12:54) title
border
grestore
(Printed by maxime da silva) rhead
(postTraitement.m) (21/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 22
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(function) K
( [ imBinaire ] = ) p
(seuillage) L
(\( distMaha,seuil \)) p n
(%R\351cup\351ration de l'image bianire avec le sueuillage) c n
(%   Detailed explanation goes here) N
() p n
(imBinaire=distMaha;) S
(%R\351cup\351ration de la matrice de distance) c n
(for) K
( i=1:size\(distMaha,1\)) p
(%Pour chaque ligne) c n
(    ) p
(for) K
( j=1:size\(distMaha,2\)) p
(%Et chaque colonnes) c n
(        ) p
(if) K
( distMaha\(i,j\)<seuil) p
(%Si la distance est plus petite que le seuil) c n
(            imBinaire\(i,j\)=1;) p
(%Alors l'image bianire=1) c n
(        ) p
(else) K
( imBinaire\(i,j\)) p
(%Sinon =0) c n
(        ) p
(end) K n
(    ) p
(end) K n
(end) N
(end) N
() p n
() N
(seuillage.m) (Page 1/1) (d\303\251c 11, 16 13:05) title
border
grestore
(Printed by maxime da silva) rhead
(seuillage.m) (22/22) (Dimanche d\303\251cembre 11, 2016) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
